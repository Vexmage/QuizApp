@model QuizApp.Models.Quiz
@{
    var results = ViewBag.Results as Dictionary<int, bool>;
    var timerEnabled = ViewBag.TimerEnabled as bool? ?? true;
    var timerDuration = ViewBag.TimerDuration as int? ?? 180;
}

<div class="quiz-container">
    <h1>@Model.Title</h1>

    @if (timerEnabled)
    {
        <div class="timer">
            <p>Time remaining: <span id="time">@((timerDuration / 60).ToString("00")):@((timerDuration % 60).ToString("00"))</span></p>
        </div>
    }

    <form method="post" action="/Home/SubmitQuiz" id="quizForm">
        @foreach (var question in Model.Questions)
        {
            <div class="question-block">
                <h3>@question.Text</h3>
                <ul>
                    @for (int i = 0; i < question.Options.Count; i++)
                    {
                        <li>
                            <input type="radio" name="question_@question.Id" value="@i" id="question_@question.Id@i" />
                            <label for="question_@question.Id@i">@question.Options[i]</label>
                        </li>
                    }
                </ul>

                @if (results != null && results.ContainsKey(question.Id))
                {
                    <p class="feedback">
                        @if (results[question.Id])
                        {
                            <span class="correct">Correct!</span>
                        }
                        else
                        {
                            <span class="incorrect">Incorrect. The correct answer was @question.Options[question.CorrectOptionIndex].</span>
                        }
                    </p>
                }
            </div>
        }
        <button type="submit">Submit Quiz</button>
    </form>
</div>

@if (timerEnabled)
{
    <!-- Popup Modal -->
    <div id="timeoutModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <p>You ran out of time!</p>
            <button id="retryButton">Try Again</button>
        </div>
    </div>
}
<style>
    /* Modal Styles */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
        text-align: center;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }
</style>

@if (timerEnabled) {
    <script>
        var timerEnabled = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(timerEnabled));
        var timeLeft = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(timerDuration)); // Time in seconds



        if (timerEnabled) {
            var timerElement = document.getElementById('time');
            var modal = document.getElementById('timeoutModal');
            var retryButton = document.getElementById('retryButton');

            function updateTimer() {
                var minutes = Math.floor(timeLeft / 60);
                var seconds = timeLeft % 60;

                // Add leading zeros
                if (minutes < 10) minutes = "0" + minutes;
                if (seconds < 10) seconds = "0" + seconds;

                timerElement.textContent = minutes + ":" + seconds;

                // Check if time is up
                if (timeLeft <= 0) {
                    clearInterval(timerInterval);
                    modal.style.display = "block"; // Show the timeout modal
                }

                timeLeft--;
            }

            // Start the timer
            var timerInterval = setInterval(updateTimer, 1000);

            // When the user clicks on retry, reload the page to retake the quiz
            retryButton.onclick = function () {
                location.reload();
            }

            // When the user clicks on <span> (x), close the modal
            document.querySelector(".close").onclick = function () {
                modal.style.display = "none";
            }

            // When the user clicks anywhere outside of the modal, close it
            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }
        }
    </script>
}
